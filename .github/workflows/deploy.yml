# Unique name for this workflow
name: Apex DML Mocking Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "sfdx-project.json"
      - "**/README.md"
      - "package.json"
      - "LICENSE"
      - ".gitignore"
      - ".prettierignore"
      - ".prettierrc"
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "sfdx-project.json"
      - "**/README.md"
      - "package.json"
      - ".gitignore"
      - ".prettierignore"
      - ".prettierrc"

jobs:
  scratch-org-test:
    runs-on: ubuntu-latest
    environment: Test
    steps:
      # Checkout the code
      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: "Restore node_modules cache"
        id: cache-npm
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-

      - name: "Install NPM"
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci

      # Authenticate using JWT flow
      - name: "Auth to dev hub"
        shell: bash
        run: |
          echo "${{ env.DEVHUB_SERVER_KEY }}" > ./jwt-server.key
          npx sf org login jwt --client-id ${{ env.DEVHUB_CONSUMER_KEY }} --username ${{ env.DEVHUB_USERNAME }} --jwt-key-file ./jwt-server.key --set-default-dev-hub
          npx sf config set target-org ${{ env.DEVHUB_USERNAME }}
        env:
          DEVHUB_USERNAME: ${{ secrets.DEVHUB_USERNAME }}
          DEVHUB_CONSUMER_KEY: ${{ secrets.DEVHUB_CONSUMER_KEY }}
          DEVHUB_SERVER_KEY: ${{ secrets.DEVHUB_SERVER_KEY }}

      - name: "Deploy & Test"
        shell: pwsh
        run: ". ./scripts/test.ps1"
